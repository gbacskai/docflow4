version: 1
backend:
  phases:
    preBuild:
      commands:
        - 'echo "🔄 Pulling latest backend environment configuration..."'
        - 'echo "🎯 Current AWS_BRANCH: $AWS_BRANCH"'
    build:
      commands:
        - nvm install 24.5.0 --no-progress
        - nvm use 24.5.0
        - npm ci --cache .npm --prefer-offline
        - 'echo "🏗️ Building with AMPLIFY_BRANCH=$AMPLIFY_BRANCH"'
        - npx ampx pipeline-deploy --branch $AWS_BRANCH --app-id $AWS_APP_ID
test:
  phases:
    preTest:
      commands:
        - npm ci
        - npm install -g pm2
        - npm install -g wait-on
        - npm install mocha mochawesome mochawesome-merge mochawesome-report-generator
        - npx ampx generate outputs --branch $AWS_BRANCH --app-id $AWS_APP_ID
        - node scripts/create-test-users.js
        - pm2 start npm -- start
        - wait-on http://localhost:4200
    test:
      commands:
        - 'npx cypress run --reporter mochawesome --reporter-options "reportDir=cypress/report/mochawesome-report,overwrite=false,html=false,json=true,timestamp=mmddyyyy_HHMMss"'
    postTest:
      commands:
        - npx mochawesome-merge cypress/report/mochawesome-report/mochawesome*.json > cypress/report/mochawesome.json
        - pm2 kill
  artifacts:
    baseDirectory: cypress
    configFilePath: '**/mochawesome.json'
    files:
      - '**/*.png'
      - '**/*.mp4'
frontend:
  phases:
    preBuild:
      commands:
        - nvm install 24.5.0 --no-progress
        - nvm use 24.5.0
        - npm ci --cache .npm --prefer-offline
        - 'echo "📦 Frontend pre-build with ENV=$ENV"'
        - npx ampx generate outputs --branch $AWS_BRANCH --app-id $AWS_APP_ID
    build:
      commands:
        - nvm install 24.5.0 --no-progress
        - nvm use 24.5.0
        - 'echo "🔨 Frontend build with ENV=$ENV"'
        - npm run build
  artifacts:
    baseDirectory: dist/docflow4/browser
    files:
      - '**/*'
  cache:
    paths:
      - .npm/**/*
      - node_modules/**/*
env:
  variables:
    NODE_VERSION: 24.5.0
    _LIVE_UPDATES: '[{"name":"Amplify CLI","pkg":"@aws-amplify/cli","type":"npm","version":"latest"}]'
    ENV: $AWS_BRANCH
    AMPLIFY_BRANCH: $AWS_BRANCH
    AMPLIFY_ENVIRONMENT_NAME: $AWS_BRANCH
